#+TITLE:Followup notes
#+AUTHOR:Marcus Birkenkrahe
#+SUBTITLE:Followup for CSC330 Database Theory & Applications Spring 2022
#+STARTUP:overview hideblocks
#+OPTIONS: toc:nil num:nil ^:nil
* What is this?

  Instead of bugging you with emails, I opt to summarize my course
  observations regarding content, process, in this file. These often
  contain additional links, articles, and musings.

  I usually update it after each class - it also contains the homework
  (if any). The first point of call for any questions should be the
  FAQ. There are two FAQs - a [[https://github.com/birkenkrahe/org/blob/master/FAQ.org#frequently-asked-questions][general one]] (for all my courses), and a
  [[https://github.com/birkenkrahe/db330/blob/main/FAQ.org][FAQ for CSC 330]].

  You find the whiteboard photos [[https://drive.google.com/drive/folders/1AUgfVPV26mCglrEPPPKPCwfkmiFhkx8R?usp=sharing][here in GDrive]].

* Intro and GitHub - w1s1 (01/11/22)

** Homework (by Thursday 13-Jan)

   * Register with GitHub (2 min)
   * Complete the GitHub Hello World exercise (20 min)
   * +Give me your GitHub user name (email - with course ID - or
     Thursday in class) - so that I can add you to the repo+ - no
     need, course is public now
   * Submit an issue to the course repo confirming that you completed
     the exercise.

   Note: if you already did this as part of another course, you don't
   have to do it again but you need to let me know in your email,
   which of my courses you attend so that I can add you to one or more
   GitHub repos.

** Stuff

   * [[https://github.com/birkenkrahe/db330/blob/main/agenda.org][Agenda]] - we covered all of it (and more) - agenda is available in
     GitHub only.

   * Books: "Crafting Interpreters" by Nystrom (2021) is a fun book on
     creating a small interpreted programming language. This would be
     an extra cool (Honors) project in a course on programming
     languages!

     #+attr_html: :width 600px
     [[./img/nystrom.png]]

   * Pyret (thank you, Molly!) - [[https://www.pyret.org/index.html][check it out]].

   * Showed GitHub, DataCamp teams and assignments, and GNU Emacs. We
     talked about structured vs. unstructured data, and Torvald's Git
     version control program: which follows a key-value data model -
     all data (committed differences) are stored in tree-like
     structures and indexed by hash codes. [[https://medium.com/hackernoon/https-medium-com-zspajich-understanding-git-data-model-95eb16cc99f5][See here for more]] (Spajic,
     2018).

     #+attr_html: :width 600px
     #+caption: GitHub desktop application
     [[./img/gh1.png]]

   * The DataCamp platform supports the three most important data
     science languages (in order of importance in the real world):
     SQL, R, Python. You can do data science with the shell (bash), or
     even with Java, C, or any other language of course. The season's
     last assignment is a project where you can see all that you
     learnt about SQL at work: an anlysis of international debt
     statistics. You do not need to work on the assignments in any
     particular order - as long as you don't miss the weekly
     deadlines. A weekly assignment should take 20-30 minutes of your
     time.

     #+attr_html: :width 600px
     #+caption: DataCamp project - Analyze Intern. Debt Stats
     [[./img/project.png]]

   * Recorded a screencast for the missing 10 minutes at the end
     (network outage in Batesville!) - [[https://youtu.be/8HJGz3IYoHI][see on YouTube here]]
     (Birkenkrahe, 2022). This is a demonstration of the differences
     of interactive shell scripting vs. interactive notebooks, using
     SQLite as a sample language. You will get an assignment to create
     a literate programming file next week. Don't be put off by the
     level of detail of this demo - let it all just wash over you for
     now - you'll learn this and much more in this course!

     #+attr_html: :width 600px
     [[./img/demo.png]]

     In the screencast I talk about missing syntax highlighting in the
     shell buffer on the left: "I could add it if I wanted to." This
     is true - everything is Emacs is customizable, and I spent years,
     literally, doing this. [[https://wikemacs.org/wiki/Shell][Here is the documentation]] specifically on
     customizing the shell, if you're curious. The language to do this
     is Emacs-Lisp, a Lisp dialect. I mentioned that Lisp was the
     [[https://medium.com/ai-society/the-lisp-approach-to-ai-part-1-a48c7385a913][first and, for a long time, dominant AI language]] (Valencia,
     2017). It's a great language to learn, and GNU Emacs is the
     ticket if you feel like it.

     #+attr_html: :width 600px
     #+caption: Common Lisp code to create an n-inputs m-units one layer perceptron. Source: AIMA.
     [[./img/lisp.png]]

* DataCamp, History of DB, MooCall - w1s2 (01/13/22)
** DataCamp membership

   * DataCamp: You should all be in your courses now.
     - Your assignments are on one page but you'll be notified via
       schoology as soon as an assignment is due

   #+attr_html: :width 400px
   #+caption: DataCamp DB course member list
   [[./img/members.png]]

** History of databases

   * [[https://youtu.be/KG-mqHoXOXY][YouTube video link]]

     #+attr_html: :width 400px
     #+caption: Which of these founders has nothing to do with databases?
     [[./img/founders.png]]

   * DB are an old human interest (information is always gathered)

   * DB development happened in close "combat" with companies and
     operating systems (market and a hardware aspect to it)

   * Dominant language is SQL - in connection with relational DB

   * Codd's 12 rules = everything you need to know about relational
     DB design (these rules scale extremely well)

   * There are MANY different types of DBMS

   * We'll be installing SQLite, too, for local SQL experimentation

** DBMS IoT example application (MooCall)

   * Website for this [[https://www.moocall.com/#][Irish app]]

     #+attr_html: :width 400px
     #+caption: Two cows with MooCall sensors attached.
     [[./img/moocall.jpg]]

   * Sensor applications are small and look trivial, but they're
     highly security relevant (Cernobyl disaster in USSR, 1986). See
     [[https://www.basicbooks.com/titles/dietrich-dorner/the-logic-of-failure/9780201479485/][The Logic of Failure (Dorner, 1997)]].

     #+attr_html: :width 300px
     [[./img/dorner.jpg]]

   * Big Data ("starts" modern data science) = 3Vs = Volume +
     Velocity + Variety [5V definitions add "value", "veracity"]

   * IoT = "webservice"-enabled, cloud-networked, fast, big data
     applications

   * MooCall DB networking:
     1) cow data are generated and pre-processed locally (e.g. cow ID,
        temperature, motion etc.) = "[[https://en.wikipedia.org/wiki/Edge_computing][edge computing]]" example
     2) cow data are processed globally (in the cloud) to generate
        user signal ("this cow's calving!")
     3) Signal is transmitted to the user = farmer for potential
        action.

   * DB system = DBMS + DB - the DBMS has a lot of fancy stuff on
     board: performance optimizer, shell, API

   * BC (Before Codd) = file system-based data management, and AC (After
     Codd) = DB management system (DBMS)-based data management.

** GNU Emacs installation

   * Install vanilla[fn:1] GNU Emacs or a modified Emacs (for statistics
     processing with R and other packages - [[https://ess.r-project.org/][ESS]])

   * Vanilla GNU Emacs v27 Windows installation: you need the
     ~emacs-27.1-x86_64-installer.exe~ [[http://gnu.freemirror.org/gnu/emacs/windows/emacs-27/][from this page]].

   * MacOS: get the [[https://vigou3.gitlab.io/emacs-modified-macos/][modified version]] if you like (easiest), or the
     binary using the command line terminal as shown [[https://www.gnu.org/software/emacs/download.html][here]], using the
     ~Homebrew~ package manager.

     #+attr_html: :width 300px
     #+caption:GNU Emacs v27 download online repo
     [[./img/download.png]]

   * Demo: keyboard macros. I showed how to define a keyboard macro
     (~C-x (~ [key sequence] ~C-x )~) and how to apply it repeatedly
     (~C-u [times] C-x e~). [[https://www.gnu.org/software/emacs/manual/html_node/emacs/Keyboard-Macros.html][Here's the documentation]].

* DB elements, GNU Emacs - w2s3 (01/18/22)
** Quiz 1

   THE QUIZ IS ON ... SCHOOLOGY 1 PM - 1.15 PM

*** Feedback/discussion

    FOLLOWED by brief FEEDBACK:

    * We'll do one of these per week (I hope)
    * Any content questions?
    * Too much time? Too little?
    * Questions too hard? Too easy?
    * A subset of these questions will become the final exam
    * After playing the quiz in class you can play it unlimited times
    * Quizzes are now *ungraded* (final exam is now 30% of final grade)

** Review: file vs database approach

   #+attr_html: :width 600px
   #+caption: database dictionary example (tutorialcup.com)
   [[./img/dict.png]]

** Captain's Log[fn:2]

   #+attr_html: :width 600px
   #+caption: Entity Relationship Diagram (Source: Lucidchart).
   [[./img/erd.png]]

   * strong vs. soft/loose coupling is an important design issue (it
     relates directly to the resilience of the designed system).

   * *meta data* are data about data, used to control, manage other
     data, and processes

   * Example: [[https://en.wikipedia.org/wiki/Exif][Exif (Exchangeable Image File)]] data are an example of
     common meta data associated with image files stored alongside
     digital pictures.

   * SQL (Structured Query Language): dominant language for
     structured, table-based (aka relational) databases
     - DQL = Data Query Language (e.g. selecting data)
     - DDL = Data Definition Language (e.g. creating tables)
     - DML = Data Manipulation Language (e.g. input/output of data)
     - DCL = Data Control Language (to alter meta data, e.g. rights)

   * Learning anything is best as a "variation on a theme" (as in
     music)

   * MooCall: what do we want to store (cow temperature F, in C)

   * State-based view of computing (von Neumann architecture) =
     dominant paradigm (automata, Turing machines...)

** GNU Emacs tour

   * Ctrl-h Ctrl-a RET : Startup screen
   * Emacs written in C and Lisp (Emacs Lisp)
   * Emacs is an IDE - we'll use it for SQL, SQLite, and bash
   * Emacs contains a bunch of apps (e.g. file explorer)
   * Try the Emacs onboard tutorial (CTRL-h t)
   * What Emacs can do:
     - Extension and full customization (with Emacs Lisp)
     - Writing in many different human/programming/markup
       languages (with major and minor modes)
     - IDE work (compile, run, test programs) - gdb integration
     - Compare and highlight file differences (with ediff)
     - Manage files (with dired)
     - Read mail, news, RSS feeds (gnus)
     - You can use it as an IRC reader (#batesville@irc.freenode.net)
     - Play games ([[https://www.masteringemacs.org/article/fun-games-in-emacs][examples]])

       #+begin_quote
       Whenever you decide to start using Emacs, you should take the Emacs tutorial. It's an interactive hands-on which will familiarize you with many things, including:

       * Starting and exiting Emacs
       * Basic text movement and editing commands
       * Opening and saving files
       * Emacs concepts: windows, frames, files, and buffers
       * Invoking commands with keybindings and with M-x
       * To run the tutorial, start Emacs and type C-h t, that is,
         Ctrl-h followed by t.
       #+end_quote

* SQLite installation - w2s4 (01/20/22)
** Captain's Log

   * GNU Emacs reference car ("cheat sheet") [[https://github.com/birkenkrahe/org/blob/master/emacs/refcard.pdf][on GitHub (PDF)]]

   * We looked at different reasons to use the Emacs editor/IDE

   * For installation of the software we need (Emacs, SQLite), which
     is already done on the PCs in the computer lab, check [[https://github.com/birkenkrahe/org/blob/master/emacs/install.org][install.org]]
     in GitHub

   * To get better at moving through Emacs buffers, manage files etc.,
     complete the GNU Emacs onboard tutorial (open it in Emacs with
     ~C-h t~)

   * We'll go through a more systematic training session (including
     Org-mode) next week.

* Cloud computing intro - w3s5 (01/25/22)
** Cloud computing - "the old curmudgeon's view"

   * Spending on cloud services in 2020: $bn 266 - projected to $bn 308
     in 2021 (DataCamp). However ([[https://www.idc.com/getdoc.jsp?containerId=prUS48776122#:~:text=For%20the%20full%20year%202021,after%20two%20years%20of%20declines.][IDC, 2022]])

     #+caption: Cloud service spending data (IDC, 2022)
     #+attr_html: :width 600px
     [[./img/cloud.png]]

   * What's the GDP of [[https://en.wikipedia.org/wiki/Finland][Finland]] and [[https://en.wikipedia.org/wiki/Vietnam][Vietnam]]?

   * On-premise vs cloud discussion - major business issue - why?

   * Main messages: cloud is huge, good for access, scaling is an issue

   * Amazon Web Services is highlighted (why?) What about other
     providers? How do they differ? What kind of market is this?

   * What do you think of the AWS products page from a logical point of
     view?

     #+caption: aws products and services (DataCamp, 2020).
     #+attr_html: :width 600px
     [[./img/aws.png]]

   * Virtualization = your OS over the internet

   * Vertical (server power) vs. horizontal scaling (server number)

   * Data centers - cp. [[https://h5p.org/node/84879]["Inside Google's Data Centers" (H5P/YouTube)]]

   * How are Lyon's data served - what about the safekeeping?

     #+caption: On-demand cloud vs. on-premise data centers
     #+attr_html: :width 400px
     [[./img/datacenter.png]]

   * IaaS/PaaS/SaaS: Socialist propaganda or brave new world of shared
     services?  What're some key conditions for this to be beautiful?

     #+caption: Cloud service models - car analogy (DataCamp, 2020)
     #+attr_html: :width 600px
     [[./img/services.png]]

   * IT services

     #+caption: IaaS vs. PaaS vs. SaaS (DataCamp, 2020)
     #+attr_html: :width 600px
     [[./img/services1.png]]

   * Use cases (UML anyone?)

     #+caption: IaaS vs. PaaS vs. SaaS (DataCamp, 2020)
     #+attr_html: :width 600px
     [[./img/usecase.png]]

   * The cloud pyramid - "More complexity means less control"

     #+caption: Control vs. Abstraction (DataCamp, 2020)
     #+attr_html: :width 500px
     [[./img/pyramid.png]]

**   Captain's Log Star Date 99667.82

   * Use case diagrams are part of the Unified Modeling Language
     (UML). Here is a good, short, free [[https://youtu.be/zid-MVo7M-E][online video tutorial]]
     ([[uml][Lucidchart, 2018]]). UML is a visual language to describe
     information systems.

   * We discussed a bank (more specifically a retail, or consumer
     bank) as an example. It is not a good use case for cloud
     computing, because the data are confidential, structured, don't
     change much, and are small. Banks more often use on-premise
     relational database management systems (RDBMS) and SQL, than
     cloud-based systems.

   * When we ask (about a table, or a diagram, or a graph, or any
     scheme), "is this logical?", we mean "is this well ordered, or
     ordered at all, fit for human understanding." There is a whole
     method, the so-called "Minto Pyramid Principle" built around this
     concept of ordering content so that it is fit for human
     understanding. Here is a short [[https://vimeo.com/305393045][online video tutorial on Minto]]
     ([[minto][Harrison Metal, 2019]]).

   * "Shell inside a shell": when we open the Windows terminal, or
     Command prompt (~cmd.exe~), and then start a program like
     ~sqlite3~, we operate in a shell inside another shell.

   * REPL = Read-Eval-Print-Loop - cloud-based application to learn
     programming: [[https://replit.com][replit.com]].

* Cloud deployment - w4s6 (02/01/22)
** DataCamp assignment - cloud deployment

   * Deployment models: private, public, hybrid, multicloud, community

   * Negative personal example (hybrid): RStudio cloud

   * Positive personal example (public): Colaboratory + GDrive,
     DataCamp Workspace

   * Nice exercise: build a NextCloud server with Raspberry Pi

   * EU GDPR - the true story: a major pain with unclear gains

   * Is there a US equivalent of the General Data Privacy Regulation
     act of the EU?[fn:3]

   * "What is personal data?" is an interesting question - why?[fn:4]

   * How international is the Internet really? (What is its backbone,
     where are public data held, and who owns the infrastructure?

   * How do "cloud computing roles" relate to "database roles"?

   * How can you improve your "cloud computing skills"? What are they?
     (Examples: [[https://www.coursera.org/professional-certificates/ibm-full-stack-cloud-developer][IBM@coursera.org]], [[https://www.edx.org/learn/cloud-computing][EdX cloud computing courses]], [[https://cloud.google.com/certification#certification_paths][Google]])

   * Overlap with data science: analysis (EDA), engineering (pipeline
     building and maintenance), and modeling (ML)

   * Database apps: Tableau etc. all based on SQL = top skill

   * Buzzword (2010-2020): "Digital transformation of the company"

     #+caption: Microsoft Skills Report (2017)
     #+attr_html: :width 600px
     [[./img/microsoft.png]]
** Captain's Log Stardate 99687.04

   * If you don't have the Linux program ~touch~ on Windows, you can
     use this command to create an empty file in the current
     directory:
     #+begin_example
      $ fsutil file createNew test.db 0
     #+end_example

   * An even simpler way is by opening the RDBM program and create a
     DB at the same time with the command ~sqlite3 test.db~ at the
     prompt.

   * [[https://docs.nextcloudpi.com/en/welcome/][NextCloudPi]] contains documentation to use the cloud computing
     software ~NextCloud~ on the Raspberry Pi. Somewhere in there
     you'll find what it takes to build a backup server with
     ~NextCloud~ (which was one of my projects).

   * [[https://www.bbc.co.uk/newsround/47523993#:~:text=The%20world%20wide%20web%2C%20or,connect%20towns%20and%20cities%20together.][World-Wide Web vs. Internet]] ([[bbc][BBC, 2019]]):
   #+begin_quote
   "The World Wide Web Is Not The Internet!"
   #+end_quote

* SQLite introduction - w5s7 (02/08/22)

** DataCamp assignment - Cloud providers and case studies

   #+caption: The benefits of French culture (Source: ila-france.com)
   #+attr_html: :width 700px
   [[./img/french.jpg]]

*** Disclaimer (limitations / bias statement)

    * "Customers churn"?

    * Commercial examples (no scientific objectivity)

    * Case studies with a strong French accent (your reaction?)

    #+caption: Global cloud service providers (DataCamp, 2019)
    #+attr_html: :width 400px
    [[./img/providers.png]]

*** AWS - Amazon Web Services

    * Q4/2019 - pre-pandemic (changes in 2021?[fn:5])

      | WHAT                  |   2019 |    2021 |
      |-----------------------+--------+---------|
      | market share          |  32.4% |   51.1% |
      | revenue               | $9.8bn | [[https://www.geekwire.com/2022/amazon-would-have-posted-1-8-billion-operating-loss-in-q4-2021-if-not-for-amazon-web-services/][$17.8bn]] |
      | annual revenue growth |  33.2% |     [[https://www.geekwire.com/2022/amazon-would-have-posted-1-8-billion-operating-loss-in-q4-2021-if-not-for-amazon-web-services/][40%]] |

    * First mover advantage

    * Are there jobs with AWS in Arkansas?

    * Does [[https://aws.amazon.com/solutions/case-studies/nerdwallet-case-study/][case example Nerdwallet]] (FinTech) still exist?

*** Microsoft Azure

    * Q4/2019 - pre-pandemic (changes in 2021?[fn:5])

      | WHAT                  |   2019 |  2021 |
      |-----------------------+--------+-------|
      | market share          |  17.6% | 31.9% |
      | revenue               | $5.3bn | $60bn |
      | annual revenue growth |  62.3% |   [[https://www.statista.com/statistics/1242206/microsoft-azure-revenue-yoy-quarterly/][51%]] |

    * Azure integrates with Microsoft products

    * Are there jobs with Azure in Arkansas?

    * Case example: [[https://customers.microsoft.com/en-us/story/772376-ottawahospital-healthprovider-azure-canada][Ottawa Hospital]] (disaster recovery)

*** Google Cloud Services

    * Q4/2019 - pre-pandemic (changes in 2021?[fn:5])

      | WHAT                  |   2019 |     2021 |
      |-----------------------+--------+----------|
      | market share          |     6% |     9.1% |
      | revenue               | $1.8bn | $65.12bn |
      | annual revenue growth |    67% |      41% |

    * Are there jobs with Google Cloud in Arkansas?

    * Lush case example (cosmetics retailer): compensate traffic
      fluctuations on their e-commerce platform

*** Other actors

    * Alibaba Cloud (China) - 5.4% (2021: 8.9%) - AI focus
    * IBM - 1.8% - SPSS (stats) + Watson (health care)
    * Oracle Cloud services (owns open source MySQL, VirtualBox)

*** How does one pick a cloud provider?

    * Current infrastructure costs
    * Cost of running a data center
    * Cost of applications
    * Cost of hiring cloud specialists
    * Benefit for company and customers
    * Risks (regulation, security, disaster, lock-in)

    *What's the right order (from most important to least important)?*

*** Future of the cloud

    * Data trends (cp. [[https://www.datacamp.com/resources/webinars/webinar-2022-data-trends-and-predictions-1][2022 Data trends by DataCamp]])
    * [[https://www.datacenters.com/news/cryptocurrency-is-changing-the-data-center-market][Cryptocurrencies]] ([[crypto][Smalley, 2021]]).
    * Post-pandemic effects


    After finishing a DataCamp course:
    1) download the slides and review if necessary
    2) download the certificate and add it to your resume

    #+caption: Statement of Accomplishment (DataCamp, 2022)
    #+attr_html: :width 500px
    [[./img/certificate.png]]

** TODO Introduction to SQLite

** TODO SQLite Practice   

* Glossary = the learning dictionary for your brain

  * Why is it important to have a glossary?

  | TERM           | MEANING                                                   |
  |----------------+-----------------------------------------------------------|
  | Meta data      | Data about data, e.g. control information for a database  |
  | DDL            | Data Definition Language                                  |
  | DML            | Data Manipulation Language                                |
  | DQL            | Data Query Language                                       |
  | DCL            | Data Control Language                                     |
  | Coupling       | (design) Relates to the independence of parts of a system |
  | gdb            | GNU debugger, [[https://www.sourceware.org/gdb/][supports many languages]]                     |
  |----------------+-----------------------------------------------------------|
  | IaaS           | Infrastructure as a Service (roads)                       |
  | PaaS           | Platform as a Service (roads + shops)                     |
  | Saas           | Software as a Service (roads + shops + products)          |
  | FaaS           | Function as a Service                                     |
  | Scaling        | Horizontal or vertical - increase computing performance   |
  | On-premise     | Application + data reside in the company or organization  |
  | Cloud          | Application + data reside in the network                  |
  | Virtualization | Split the server action up across different locations     |
  | GDPR           | General Data Privacy Regulation act of the European Union |
  | Internet       | Global digital infrastructure (router,network)            |
  | Web            | Global collection of digital content (browser,wiki)       |
  |----------------+-----------------------------------------------------------|


* References
  * <<bbc>> BBC (11 Mar 2019). World wide web vs. internet - what's
    the difference? [video]. [[https://www.bbc.co.uk/newsround/47523993#:~:text=The%20world%20wide%20web%2C%20or,connect%20towns%20and%20cities%20together.][URL: www.bbc.co.uk]].
  * Birkenkrahe (Jan 11, 2022). Interactive shell vs. interactive
    notebook (literate programming demo). [[https://youtu.be/8HJGz3IYoHI][URL: youtu.be/8HJGz3IYoHI]].
  * bnewall1 (Apr 25, 2010). Star Trek: Captain's Log - 11/30/1994 -
    2/7 [video]. [[https://youtu.be/T2bSMLEQX1o][URL: youtu.be/T2bSMLEQX1o]].
  * <<crypto>> Smalley (22 Oct 2021). Cryptocurrency is changing the
    Data Center Market [blog]. [[https://www.datacenters.com/news/cryptocurrency-is-changing-the-data-center-market][URL: datacenters.com]].
  * <<minto>> Harrison Metal (2019). Thank You, Barbara Minto
    [video]. [[https://vimeo.com/305393045][URL: vimeo.com/305393045]].
  * Lucidchart (2022). What is a Database Model [website]. [[https://www.lucidchart.com/pages/database-diagram/database-models][URL:
    www.lucidchart.com]].
  * <<uml>> Lucidchart (Feb 7, 2018). UML Use Case Diagram Tutorial
    [video]. [[https://youtu.be/zid-MVo7M-E][URL: youtu.be/zid-MVo7M-E]].
  * Moocall (Nov 27, 2020). Moocall Calving Sensor [video]. [[https://youtu.be/718uGYbUmao][URL:
    youtu.be/718uGYbUmao]].
  * NextCloudPi Documentation (2019). Welcome [website]. [[https://docs.nextcloudpi.com/en/welcome/][URL:
    docs.nextcloudpi.com]].
  * Nystrom (2021). Crafting Interpreters. Genever Benning. URL:
    https://craftinginterpreters.com/
  * Russell/Norvig (2021). Artificial Intelligence - a Modern Approach
    (AIMA). Pearson. URL: aima.cs.berkeley.edu.
  * Spajic (Jan 29, 2018). Understanding Git - Data Model. [[https://medium.com/hackernoon/https-medium-com-zspajich-understanding-git-data-model-95eb16cc99f5][URL:
    medium.com/hackernoon]].
  * Valencia (Feb 28, 2017). The Lisp approach to AI (Part 1). [[https://medium.com/ai-society/the-lisp-approach-to-ai-part-1-a48c7385a913][URL:
    medium.com/ai-society.]]

* Footnotes

[fn:5] [[https://www.statista.com/statistics/1202770/hyperscaler-iaas-paas-market-share/][Statista]] numbers (no source given) for 2021.

[fn:4]Privacy is a political term. Private information can also be an
entry to phishing or other network-based activities compromising the
security of your PC.

[fn:3] There is no federal data privacy law like GDPR in the United
States. There are some national laws that have been put in place to
regulate the use of data in certain industries, e.g. The 1974
U.S. Privacy Act (rights and restrictions regarding data held by US
government agencies), or the 2018 California Consumer Privacy Act
(rights and protection for CA residents).

[fn:2][[https://youtu.be/T2bSMLEQX1o]["Logic, logic...I'm sick to death of logic!"]] (Star Trek:
Captain's Log)

[fn:1]The term "vanilla" refers to the fact that this is the
uncustomized, original version of Emacs. For large, old open source
projects, this is a bit of a mystery, though, since so many versions
exist that it may be difficult to identify "the original".
